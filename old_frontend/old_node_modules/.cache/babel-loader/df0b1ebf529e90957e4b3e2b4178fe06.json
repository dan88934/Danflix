{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/helpers/routes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //If they come in with path of logged in, redirect them to logged inpath\n//If not, send them to children (sign in page)\n\nexport function IsUserRedirect({\n  user,\n  loggedInPath,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => {\n      if (!user) {\n        return children;\n      }\n\n      if (user) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: loggedInPath\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }\n        });\n      }\n\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n}\nexport function ProtectedRoute({\n  user,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: {\n      location\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,QAAtB;AAAgC,KAAGC;AAAnC,CAAxB,EAAmE;AACtE,sBACI,oBAAC,KAAD,oBACSA,IADT;AAEI,IAAA,MAAM,EAAE,MAAM;AACV,UAAI,CAACH,IAAL,EAAW;AACP,eAAOE,QAAP;AACH;;AAED,UAAIF,IAAJ,EAAU;AACN,4BACI,oBAAC,QAAD;AACA,UAAA,EAAE,EAAE;AACAI,YAAAA,QAAQ,EAAEH;AADV,WADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AAED,aAAO,IAAP;AACP,KAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAsBH;AAED,OAAO,SAASI,cAAT,CAAwB;AAAEL,EAAAA,IAAF;AAAQE,EAAAA,QAAR;AAAkB,KAAGC;AAArB,CAAxB,EAAqD;AACxD,sBACI,oBAAC,KAAD,oBACSA,IADT;AAEI,IAAA,MAAM,EAAG;AAAEG,MAAAA;AAAF,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//If they come in with path of logged in, redirect them to logged inpath\n//If not, send them to children (sign in page)\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n    return (\n        <Route\n            { ...rest}\n            render={() => {\n                if (!user) {\n                    return children;\n                }\n\n                if (user) {\n                    return (\n                        <Redirect\n                        to={{\n                            pathname: loggedInPath\n                        }}\n                        />\n                    );\n                }\n\n                return null;\n        }}\n        />\n    );\n}\n\nexport function ProtectedRoute({ user, children, ...rest }) {\n    return (\n        <Route\n            { ...rest}\n            render={({ location })}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}