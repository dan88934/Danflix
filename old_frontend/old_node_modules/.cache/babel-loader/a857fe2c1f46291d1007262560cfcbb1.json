{"ast":null,"code":"import _slicedToArray from\"/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useContext}from'react';import{FirebaseContext}from'../context/firebase';export default function useAuthListener(){var _useState=useState(JSON.parse(localStorage.getItem('authUser'))),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useContext=useContext(FirebaseContext),firebase=_useContext.firebase;useEffect(function(){var listener=firebase.auth().onAuthStateChanged(function(authUser){if(authUser){localStorage.setItem('authUser',JSON.stringify(authUser));setUser(authUser);}else{localStorage.removeItem('authUser');setUser(null);}});return function(){return listener();};},[]);return{user:user};}","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","JSON","parse","localStorage","getItem","user","setUser","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":"sLAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,UAA9B,KAAgD,OAAhD,CACA,OAASC,eAAT,KAAgC,qBAAhC,CAEA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACtC,cAAwBJ,QAAQ,CAC5BK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD4B,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAGA,gBAAmBR,UAAU,CAACC,eAAD,CAA7B,CAAOQ,QAAP,aAAOA,QAAP,CAEAV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,QAAQ,CAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAmC,SAACC,QAAD,CAAc,CAC9D,GAAIA,QAAJ,CAAc,CACVR,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAiCX,IAAI,CAACY,SAAL,CAAeF,QAAf,CAAjC,EACAL,OAAO,CAACK,QAAD,CAAP,CACH,CAHD,IAGO,CACHR,YAAY,CAACW,UAAb,CAAwB,UAAxB,EACAR,OAAO,CAAC,IAAD,CAAP,CACH,CACJ,CARgB,CAAjB,CAUA,MAAO,kBAAME,CAAAA,QAAQ,EAAd,EAAP,CACH,CAZQ,CAYN,EAZM,CAAT,CAcA,MAAO,CAAEH,IAAI,CAAJA,IAAF,CAAP,CACH","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(\n        JSON.parse(localStorage.getItem('authUser'))\n    );\n    const {firebase} = useContext(FirebaseContext);\n\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser));\n                setUser(authUser);\n            } else {\n                localStorage.removeItem('authUser');\n                setUser(null);\n            }\n        });\n\n        return () => listener(); \n    }, []);\n\n    return { user };\n}"]},"metadata":{},"sourceType":"module"}