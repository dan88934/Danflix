{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Fuse from 'fuse.js';\nimport { Card, Header, Loading, Player } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\nimport { FirebaseContext } from '../context/firebase';\nimport { SelectProfileContainer } from './profiles';\nimport { FooterContainer } from './footer';\nexport function BrowseContainer(_ref) {\n  var slides = _ref.slides;\n\n  var _useState = useState('series'),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profile = _useState4[0],\n      setProfile = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchTerm = _useState8[0],\n      setSearchTerm = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      slideRows = _useState10[0],\n      setSlideRows = _useState10[1];\n\n  var _useContext = useContext(FirebaseContext),\n      firebase = _useContext.firebase;\n\n  var user = firebase.auth().currentUser || {};\n  useEffect(function () {\n    //We use Fuse for the live search function\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  useEffect(function () {\n    setSlideRows(slides[category]);\n  }, [slides, category]);\n  useEffect(function () {\n    var fuse = new Fuse(slideRows, {\n      keys: ['data.description', 'data.title', 'data.genre']\n    });\n    var results = fuse.search(searchTerm).map(function (_ref2) {\n      var item = _ref2.item;\n      return item;\n    });\n\n    if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n      setSlideRows(results);\n    } else {\n      setSlideRows(slides[category]);\n    }\n  }, [searchTerm]);\n  return profile.displayName ? /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Loading, {\n    src: user.photoURL\n  }) : /*#__PURE__*/React.createElement(Loading.ReleaseBody, null), /*#__PURE__*/React.createElement(Header, {\n    src: \"joker1\",\n    dontShowOnSmallViewPort: true\n  }, /*#__PURE__*/React.createElement(Header.Frame, null, /*#__PURE__*/React.createElement(Header.Group, null, /*#__PURE__*/React.createElement(Header.Logo, {\n    to: ROUTES.HOME,\n    src: logo,\n    alt: \"Netflix\"\n  }), /*#__PURE__*/React.createElement(Header.TextLink, {\n    active: category === 'series' ? 'true' : 'false',\n    onClick: function onClick() {\n      return setCategory('series');\n    }\n  }, \"Series\"), /*#__PURE__*/React.createElement(Header.TextLink, {\n    active: category === 'films' ? 'true' : 'false',\n    onClick: function onClick() {\n      return setCategory('films');\n    }\n  }, \"Films\")), /*#__PURE__*/React.createElement(Header.Group, null, /*#__PURE__*/React.createElement(Header.Search, {\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm\n  }), /*#__PURE__*/React.createElement(Header.Profile, null, /*#__PURE__*/React.createElement(Header.Picture, {\n    src: user.photoURL\n  }), /*#__PURE__*/React.createElement(Header.Dropdown, null, /*#__PURE__*/React.createElement(Header.Group, null, /*#__PURE__*/React.createElement(Header.Picture, {\n    src: user.photoURL\n  }), /*#__PURE__*/React.createElement(Header.TextLink, null, user.displayName)), /*#__PURE__*/React.createElement(Header.Group, null, /*#__PURE__*/React.createElement(Header.TextLink, {\n    onClick: function onClick() {\n      return firebase.auth().signOut();\n    }\n  }, \"Sign out\")))))), /*#__PURE__*/React.createElement(Header.Feature, null, /*#__PURE__*/React.createElement(Header.FeatureCallOut, null, \"Watch Joker Now\"), /*#__PURE__*/React.createElement(Header.Text, null, \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"), /*#__PURE__*/React.createElement(Header.PlayButton, null, \"Play\"))), /*#__PURE__*/React.createElement(Card.Group, null, slideRows.map(function (slideItem) {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: \"\".concat(category, \"-\").concat(slideItem.title.toLowerCase())\n    }, /*#__PURE__*/React.createElement(Card.Title, null, slideItem.title), /*#__PURE__*/React.createElement(Card.Entities, null, slideItem.data.map(function (item) {\n      return /*#__PURE__*/React.createElement(Card.Item, {\n        key: item.docId,\n        item: item\n      }, /*#__PURE__*/React.createElement(Card.Image, {\n        src: \"/images/\".concat(category, \"/\").concat(item.genre, \"/\").concat(item.slug, \"/small.jpg\")\n      }), /*#__PURE__*/React.createElement(Card.Meta, null, /*#__PURE__*/React.createElement(Card.SubTitle, null, item.title), /*#__PURE__*/React.createElement(Card.Text, null, item.description)));\n    })), /*#__PURE__*/React.createElement(Card.Feature, {\n      category: category\n    }, /*#__PURE__*/React.createElement(Player, null, /*#__PURE__*/React.createElement(Player.Button, null), /*#__PURE__*/React.createElement(Player.Video, {\n      src: \"/videos/bunny.mp4\"\n    })), /*#__PURE__*/React.createElement(\"p\", null, \"player\")));\n  })), /*#__PURE__*/React.createElement(FooterContainer, null)) : /*#__PURE__*/React.createElement(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  });\n} //Above - each item will have a file-name var. This var will be inserted where bunny is. It will be the same name as the video file","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/containers/browse.js"],"names":["React","useState","useEffect","useContext","Fuse","Card","Header","Loading","Player","ROUTES","logo","FirebaseContext","SelectProfileContainer","FooterContainer","BrowseContainer","slides","category","setCategory","profile","setProfile","loading","setLoading","searchTerm","setSearchTerm","slideRows","setSlideRows","firebase","user","auth","currentUser","setTimeout","displayName","fuse","keys","results","search","map","item","length","photoURL","HOME","signOut","slideItem","title","toLowerCase","data","docId","genre","slug","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Fuse from 'fuse.js';\nimport { Card, Header, Loading, Player } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\nimport { FirebaseContext } from '../context/firebase';\nimport { SelectProfileContainer } from './profiles';\nimport { FooterContainer } from './footer';\n\nexport function BrowseContainer({ slides }) {\n  const [category, setCategory] = useState('series');\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [slideRows, setSlideRows] = useState([]);\n\n  const { firebase } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n\n  useEffect(() => { //We use Fuse for the live search function\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n\n  useEffect(() => {\n    setSlideRows(slides[category]);\n  }, [slides, category]);\n\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, { keys: ['data.description', 'data.title', 'data.genre'] });\n    const results = fuse.search(searchTerm).map(({ item }) => item);\n\n    if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n      setSlideRows(results);\n    } else {\n      setSlideRows(slides[category]);\n    }\n  }, [searchTerm]);\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker1\" dontShowOnSmallViewPort>\n        <Header.Frame>\n          <Header.Group>\n            <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\n            <Header.TextLink active={category === 'series' ? 'true' : 'false'} onClick={() => setCategory('series')}>\n              Series\n            </Header.TextLink>\n            <Header.TextLink active={category === 'films' ? 'true' : 'false'} onClick={() => setCategory('films')}>\n              Films\n            </Header.TextLink>\n          </Header.Group>\n          <Header.Group>\n            <Header.Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n            <Header.Profile>\n              <Header.Picture src={user.photoURL} />\n              <Header.Dropdown>\n                <Header.Group>\n                  <Header.Picture src={user.photoURL} />\n                  <Header.TextLink>{user.displayName}</Header.TextLink>\n                </Header.Group>\n                <Header.Group>\n                  <Header.TextLink onClick={() => firebase.auth().signOut()}>Sign out</Header.TextLink>\n                </Header.Group>\n              </Header.Dropdown>\n            </Header.Profile>\n          </Header.Group>\n        </Header.Frame>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham\n            City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a\n            futile attempt to feel like he's part of the world around him.\n          </Header.Text>\n          <Header.PlayButton>Play</Header.PlayButton>\n        </Header.Feature>\n      </Header>\n\n      <Card.Group>\n        {slideRows.map((slideItem) => (\n          <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n            <Card.Title>{slideItem.title}</Card.Title>\n            <Card.Entities>\n              {slideItem.data.map((item) => (\n                <Card.Item key={item.docId} item={item}>\n                  <Card.Image src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`} />\n                  <Card.Meta>\n                    <Card.SubTitle>{item.title}</Card.SubTitle>\n                    <Card.Text>{item.description}</Card.Text>\n                  </Card.Meta>\n                </Card.Item>\n              ))}\n            </Card.Entities>\n            <Card.Feature category={category}>\n              <Player>\n                <Player.Button />\n                <Player.Video src=\"/videos/bunny.mp4\" /> \n              </Player>\n              <p>player</p>\n            </Card.Feature>\n          </Card>\n        ))}\n      </Card.Group>\n      <FooterContainer />\n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  );\n}\n\n//Above - each item will have a file-name var. This var will be inserted where bunny is. It will be the same name as the video file"]},"metadata":{},"sourceType":"module"}