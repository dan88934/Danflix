{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/pages/signin.js\";\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../context/firebase';\nimport { HeaderContainer } from '../containers/header';\nimport { FooterContainer } from '../containers/footer';\nimport { Form } from '../components';\nimport * as ROUTES from '../constants/routes';\nexport default function Signin() {\n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const isInvalid = password == '' || emailAddress == '';\n\n  const handleSignIn = event => {\n    event.preventDefault(); // firebase work here!\n\n    firebase.auth().signInWithEmailAndPassword(emailAddress, password).then(() => {\n      // push to the browse page\n      history.push(ROUTES.BROWSE);\n    }).catch(error => {\n      setEmailAddress('');\n      setPassword('');\n      setError(error.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Hello from the sign in!\", /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), error && /*#__PURE__*/React.createElement(Form.Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(Form.Base, {\n    onSubmit: handleSignIn,\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Email address\",\n    value: emailAddress,\n    onChange: ({\n      target\n    }) => setEmailAddress(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    type: \"Password\",\n    autoComplete: \"off\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Submit, {\n    disabled: isInvalid,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Signin\")), /*#__PURE__*/React.createElement(Form.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"New to Netfix? \", /*#__PURE__*/React.createElement(Form.Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }\n  }, \"Sign up now \")), /*#__PURE__*/React.createElement(Form.TextSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn More.\"))), /*#__PURE__*/React.createElement(FooterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/pages/signin.js"],"names":["React","useState","useContext","useHistory","FirebaseContext","HeaderContainer","FooterContainer","Form","ROUTES","Signin","history","firebase","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignIn","event","preventDefault","auth","signInWithEmailAndPassword","then","push","BROWSE","catch","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeT,UAAU,CAACE,eAAD,CAA/B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMiB,SAAS,GAAGJ,QAAQ,IAAI,EAAZ,IAAkBF,YAAY,IAAI,EAApD;;AACA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CAG5B;;AACAV,IAAAA,QAAQ,CACHW,IADL,GAEKC,0BAFL,CAEgCX,YAFhC,EAE8CE,QAF9C,EAGKU,IAHL,CAGU,MAAM;AACR;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAajB,MAAM,CAACkB,MAApB;AACH,KANL,EAOOC,KAPP,CAOcX,KAAD,IAAW;AAChBH,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACH,KAXL;AAYH,GAhBD;;AAiBA,sBACA,uDACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKZ,KAAK,iBAAI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAb,CAFd,eAII,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,QAAQ,EAAEG,YAArB;AAAmC,IAAA,MAAM,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,WAAW,EAAC,eADhB;AAEI,IAAA,KAAK,EAAEP,YAFX;AAGI,IAAA,QAAQ,EAAE,CAAC;AAAEiB,MAAAA;AAAF,KAAD,KAAgBhB,eAAe,CAACgB,MAAM,CAACC,KAAR,CAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,YAAY,EAAC,KAFjB;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,KAAK,EAAEhB,QAJX;AAKI,IAAA,QAAQ,EAAE,CAAC;AAAEe,MAAAA;AAAF,KAAD,KAAgBd,WAAW,CAACc,MAAM,CAACC,KAAR,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAaI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,QAAQ,EAAEZ,SAAvB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAJJ,eAsBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACmB,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnB,CAtBJ,eAyBI,oBAAC,IAAD,CAAM,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAzBJ,CADJ,CADJ,eAgCI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADA;AAoCH","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../context/firebase'\nimport { HeaderContainer } from '../containers/header';\nimport { FooterContainer } from '../containers/footer';\nimport { Form } from '../components';\nimport * as ROUTES from '../constants/routes';\n\nexport default function Signin() {\n    const history = useHistory();\n    const { firebase } = useContext(FirebaseContext);\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const isInvalid = password == '' || emailAddress == '';\n    const handleSignIn = (event) => {\n        event.preventDefault();\n\n        // firebase work here!\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(emailAddress, password)\n            .then(() => {\n                // push to the browse page\n                history.push(ROUTES.BROWSE);\n            })\n              .catch((error) => {\n                setEmailAddress('');\n                setPassword('');\n                setError(error.message);\n            })\n    };\n    return  (\n    <>\n        <HeaderContainer>Hello from the sign in! \n            <Form>\n                <Form.Title>Sign In</Form.Title>\n                {error && <Form.Error>{error}</Form.Error>}\n\n                <Form.Base onSubmit={handleSignIn} method=\"POST\">\n                    <Form.Input\n                        placeholder=\"Email address\"\n                        value={emailAddress}\n                        onChange={({ target }) => setEmailAddress(target.value)}\n                    />\n                    <Form.Input\n                        type=\"Password\"\n                        autoComplete=\"off\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                    <Form.Submit disabled={isInvalid} type=\"submit\">\n                        Signin \n                    </Form.Submit>\n                </Form.Base>\n\n                <Form.Text>\n                    New to Netfix? <Form.Link to=\"/signup\">Sign up now </Form.Link>\n                </Form.Text>\n                <Form.TextSmall>\n                    This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn More.\n                </Form.TextSmall>\n            </Form>\n        </HeaderContainer>\n        <FooterContainer />\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}