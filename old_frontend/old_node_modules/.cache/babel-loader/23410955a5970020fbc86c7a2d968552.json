{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/components/accordion/index.js\";\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from './styles/accordion';\nconst ToggleContext = createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Container, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, children));\n} // State is for keeping track of changes on the page\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Title, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }), children);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Frame, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }), children);\n};\n\nAccordion.Item = function AccordionItem({\n  children,\n  ...restProps\n}) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/React.createElement(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), children), \";\");\n};\n\nAccordion.Header = function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  //Passed into item\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/React.createElement(Header, Object.assign({\n    onClick: () => setToggleShow(toggleShow => !toggleShow)\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nAccordion.Body = function AccordionBody({\n  children,\n  ...restProps\n}) {\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/React.createElement(Body, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), children) : null;\n};","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Inner","Header","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,IAAvD,QAAmE,oBAAnE;AAEA,MAAMC,aAAa,GAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA+C;AAC1D,sBACI,oBAAC,SAAD,oBAAgBA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,QAAT,CADJ,CADJ;AAKH,C,CACD;;AACAD,SAAS,CAACN,KAAV,GAAkB,SAASS,cAAT,CAAwB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AAClE,sBAAO,oBAAC,KAAD,oBAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBD,QAAxB,CAAP;AACH,CAFD;;AAIAD,SAAS,CAACP,KAAV,GAAkB,SAASW,cAAT,CAAwB;AAAEH,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AAClE,sBAAO,oBAAC,KAAD,oBAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBD,QAAxB,CAAP;AACH,CAFD;;AAIAD,SAAS,CAACL,IAAV,GAAiB,SAASU,aAAT,CAAuB;AAAEJ,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAChE,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,oBAAWL,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuBD,QAAvB,CADJ,MADJ;AAKH,CAPD;;AASAD,SAAS,CAACH,MAAV,GAAmB,SAASW,eAAT,CAAyB;AAAEP,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAqD;AAAE;AACtE,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCjB,UAAU,CAACS,aAAD,CAAhD;AACA,sBACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMQ,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB;AAApC,KAAwEJ,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKD,QADL,CADA;AAMH,CARD;;AAUAD,SAAS,CAACF,IAAV,GAAiB,SAASW,aAAT,CAAuB;AAAER,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAChE,QAAM;AAAEI,IAAAA;AAAF,MAAiBhB,UAAU,CAACS,aAAD,CAAjC;AAEA,SAAOO,UAAU,gBAAG,oBAAC,IAAD,oBAAWJ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBD,QAAxB,CAAH,GAA8C,IAA/D;AACH,CAJD","sourcesContent":["import React, {useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from './styles/accordion'\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n    return (\n        <Container { ...restProps }>\n            <Inner>{ children }</Inner>\n        </Container>\n    )\n}\n// State is for keeping track of changes on the page\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n    return <Title { ...restProps}>{children}</Title>;\n};\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n    return <Frame { ...restProps}>{children}</Frame>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n    const [toggleShow, setToggleShow] = useState(false);\n    return (\n        <ToggleContext.Provider value={{ toggleShow, setToggleShow}}> \n            <Item { ...restProps}>{children}</Item>;\n        </ToggleContext.Provider>\n    );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) { //Passed into item\n    const { toggleShow, setToggleShow } = useContext(ToggleContext);\n    return (\n    <Header onClick={() => setToggleShow((toggleShow) => !toggleShow)} { ...restProps}> \n        {children}\n        {}\n    </Header>\n    );\n};\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n    const { toggleShow } = useContext(ToggleContext);\n\n    return toggleShow ? <Body { ...restProps }>{children}</Body> : null\n};"]},"metadata":{},"sourceType":"module"}