{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\nexport default function useAuthListener() {\n  var _useState = useState(JSON.parse(localStorage.getItem('authUser'))),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useContext = useContext(FirebaseContext),\n      firebase = _useContext.firebase;\n\n  useEffect(function () {\n    var listener = firebase.auth().onAuthStateChanged(function (authUser) {\n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return function () {\n      return listener();\n    };\n  }, []);\n  return {\n    user: user\n  };\n}","map":{"version":3,"sources":["/Users/Daniel/Dropbox/Documents/Projects/Danflix/react_frontend/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","JSON","parse","localStorage","getItem","user","setUser","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACtC,kBAAwBJ,QAAQ,CAC5BK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD4B,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAGA,oBAAmBR,UAAU,CAACC,eAAD,CAA7B;AAAA,MAAOQ,QAAP,eAAOA,QAAP;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,QAAD,EAAc;AAC9D,UAAIA,QAAJ,EAAc;AACVR,QAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCX,IAAI,CAACY,SAAL,CAAeF,QAAf,CAAjC;AACAL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACH,OAHD,MAGO;AACHR,QAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAR,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,KARgB,CAAjB;AAUA,WAAO;AAAA,aAAME,QAAQ,EAAd;AAAA,KAAP;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AAAEH,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACH","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(\n        JSON.parse(localStorage.getItem('authUser'))\n    );\n    const {firebase} = useContext(FirebaseContext);\n\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser));\n                setUser(authUser);\n            } else {\n                localStorage.removeItem('authUser');\n                setUser(null);\n            }\n        });\n\n        return () => listener(); \n    }, []);\n\n    return { user };\n}"]},"metadata":{},"sourceType":"module"}